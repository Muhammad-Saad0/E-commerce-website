{"ast":null,"code":"import { UPDATE_PRODUCTS, FETCH_PRODUCTS_REQUEST, ERROR, DELETE_PRODUCT, ADD_PRODUCT } from \"../constants/productConstants\";\nimport axios from \"../../axios/axios\";\nconst productRequest = () => {\n  return {\n    type: FETCH_PRODUCTS_REQUEST\n  };\n};\nconst updateProducts = products => {\n  return {\n    type: UPDATE_PRODUCTS,\n    payload: products\n  };\n};\nconst Error = error => {\n  return {\n    type: ERROR,\n    payload: error\n  };\n};\n_c = Error;\nconst deleteProductById = id => {\n  return {\n    type: DELETE_PRODUCT,\n    payload: id\n  };\n};\nexport const updateProductById = () => {\n  return {\n    type: \"UPDATE\"\n  };\n};\nexport const fetchProducts = () => {\n  return async dispatch => {\n    dispatch(productRequest());\n    try {\n      const products = await axios.get(\"/fetch-products\");\n      dispatch(updateProducts(products.data));\n    } catch (error) {\n      dispatch(Error(error));\n    }\n  };\n};\nexport const deleteProduct = id => {\n  return async dispatch => {\n    dispatch(productRequest());\n    try {\n      await axios.post(`/delete-product${id}`);\n      dispatch(deleteProductById(id));\n    } catch (error) {\n      dispatch(Error(error));\n    }\n  };\n};\nexport const addProduct = product => {\n  return async dispatch => {\n    dispatch(productRequest());\n    try {\n      await axios.post(\"/add-product\", product);\n      dispatch(fetchProducts());\n    } catch (error) {\n      dispatch(Error(error));\n    }\n  };\n};\nexport const updateProduct = (productData, id) => {\n  return async dispatch => {\n    dispatch(productRequest());\n    try {\n      await axios.post(`/update-product/${id}`, {\n        productData\n      });\n    } catch (error) {}\n  };\n};\nvar _c;\n$RefreshReg$(_c, \"Error\");","map":{"version":3,"names":["UPDATE_PRODUCTS","FETCH_PRODUCTS_REQUEST","ERROR","DELETE_PRODUCT","ADD_PRODUCT","axios","productRequest","type","updateProducts","products","payload","Error","error","_c","deleteProductById","id","updateProductById","fetchProducts","dispatch","get","data","deleteProduct","post","addProduct","product","updateProduct","productData","$RefreshReg$"],"sources":["C:/Users/saadm/Desktop/E-commerce-project/client/src/redux/actions/productActions.js"],"sourcesContent":["import {\r\n  UPDATE_PRODUCTS,\r\n  FETCH_PRODUCTS_REQUEST,\r\n  ERROR,\r\n  DELETE_PRODUCT,\r\n  ADD_PRODUCT,\r\n} from \"../constants/productConstants\";\r\nimport axios from \"../../axios/axios\";\r\n\r\nconst productRequest = () => {\r\n  return {\r\n    type: FETCH_PRODUCTS_REQUEST,\r\n  };\r\n};\r\n\r\nconst updateProducts = (products) => {\r\n  return {\r\n    type: UPDATE_PRODUCTS,\r\n    payload: products,\r\n  };\r\n};\r\n\r\nconst Error = (error) => {\r\n  return {\r\n    type: ERROR,\r\n    payload: error,\r\n  };\r\n};\r\n\r\nconst deleteProductById = (id) => {\r\n  return {\r\n    type: DELETE_PRODUCT,\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport const updateProductById = () => {\r\n  return {\r\n    type: \"UPDATE\"\r\n  }\r\n}\r\n\r\nexport const fetchProducts = () => {\r\n  return async (dispatch) => {\r\n    dispatch(productRequest());\r\n    try {\r\n      const products = await axios.get(\r\n        \"/fetch-products\"\r\n      );\r\n      dispatch(updateProducts(products.data));\r\n    } catch (error) {\r\n      dispatch(Error(error));\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteProduct = (id) => {\r\n  return async (dispatch) => {\r\n    dispatch(productRequest());\r\n    try {\r\n      await axios.post(`/delete-product${id}`);\r\n      dispatch(deleteProductById(id));\r\n    } catch (error) {\r\n      dispatch(Error(error));\r\n    }\r\n  };\r\n};\r\n\r\nexport const addProduct = (product) => {\r\n  return async (dispatch) => {\r\n    dispatch(productRequest());\r\n    try {\r\n      await axios.post(\"/add-product\", product);\r\n      dispatch(fetchProducts());\r\n    } catch (error) {\r\n      dispatch(Error(error));\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateProduct = (\r\n  productData,\r\n  id\r\n) => {\r\n  return async (dispatch) => {\r\n    dispatch(productRequest());\r\n    try {\r\n      await axios.post(`/update-product/${id}`, {\r\n        productData,\r\n      });\r\n    } catch (error) {}\r\n  };\r\n};\r\n"],"mappings":"AAAA,SACEA,eAAe,EACfC,sBAAsB,EACtBC,KAAK,EACLC,cAAc,EACdC,WAAW,QACN,+BAA+B;AACtC,OAAOC,KAAK,MAAM,mBAAmB;AAErC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,OAAO;IACLC,IAAI,EAAEN;EACR,CAAC;AACH,CAAC;AAED,MAAMO,cAAc,GAAIC,QAAQ,IAAK;EACnC,OAAO;IACLF,IAAI,EAAEP,eAAe;IACrBU,OAAO,EAAED;EACX,CAAC;AACH,CAAC;AAED,MAAME,KAAK,GAAIC,KAAK,IAAK;EACvB,OAAO;IACLL,IAAI,EAAEL,KAAK;IACXQ,OAAO,EAAEE;EACX,CAAC;AACH,CAAC;AAACC,EAAA,GALIF,KAAK;AAOX,MAAMG,iBAAiB,GAAIC,EAAE,IAAK;EAChC,OAAO;IACLR,IAAI,EAAEJ,cAAc;IACpBO,OAAO,EAAEK;EACX,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EACrC,OAAO;IACLT,IAAI,EAAE;EACR,CAAC;AACH,CAAC;AAED,OAAO,MAAMU,aAAa,GAAGA,CAAA,KAAM;EACjC,OAAO,MAAOC,QAAQ,IAAK;IACzBA,QAAQ,CAACZ,cAAc,CAAC,CAAC,CAAC;IAC1B,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMJ,KAAK,CAACc,GAAG,CAC9B,iBACF,CAAC;MACDD,QAAQ,CAACV,cAAc,CAACC,QAAQ,CAACW,IAAI,CAAC,CAAC;IACzC,CAAC,CAAC,OAAOR,KAAK,EAAE;MACdM,QAAQ,CAACP,KAAK,CAACC,KAAK,CAAC,CAAC;IACxB;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMS,aAAa,GAAIN,EAAE,IAAK;EACnC,OAAO,MAAOG,QAAQ,IAAK;IACzBA,QAAQ,CAACZ,cAAc,CAAC,CAAC,CAAC;IAC1B,IAAI;MACF,MAAMD,KAAK,CAACiB,IAAI,CAAE,kBAAiBP,EAAG,EAAC,CAAC;MACxCG,QAAQ,CAACJ,iBAAiB,CAACC,EAAE,CAAC,CAAC;IACjC,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdM,QAAQ,CAACP,KAAK,CAACC,KAAK,CAAC,CAAC;IACxB;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMW,UAAU,GAAIC,OAAO,IAAK;EACrC,OAAO,MAAON,QAAQ,IAAK;IACzBA,QAAQ,CAACZ,cAAc,CAAC,CAAC,CAAC;IAC1B,IAAI;MACF,MAAMD,KAAK,CAACiB,IAAI,CAAC,cAAc,EAAEE,OAAO,CAAC;MACzCN,QAAQ,CAACD,aAAa,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdM,QAAQ,CAACP,KAAK,CAACC,KAAK,CAAC,CAAC;IACxB;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMa,aAAa,GAAGA,CAC3BC,WAAW,EACXX,EAAE,KACC;EACH,OAAO,MAAOG,QAAQ,IAAK;IACzBA,QAAQ,CAACZ,cAAc,CAAC,CAAC,CAAC;IAC1B,IAAI;MACF,MAAMD,KAAK,CAACiB,IAAI,CAAE,mBAAkBP,EAAG,EAAC,EAAE;QACxCW;MACF,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOd,KAAK,EAAE,CAAC;EACnB,CAAC;AACH,CAAC;AAAC,IAAAC,EAAA;AAAAc,YAAA,CAAAd,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}